tree28_2_values = cbind(time_index_column, tree28_2_values)
data_plot28_2 = melt(tree28_2_values,id.vars="time",measure.vars=c("exact value", "predicted value"))
exact_vs_predicted28_2 = ggplot(data_plot28_2,aes(x=time,y=value,color=variable))+
geom_line()
#exact_vs_predicted28_2
value28_3 = as.numeric(selected_dt3[6,-1])
tree_fit28_3=rpart(value28_3~time_index,selected_dt2,
control=rpart.control(maxdepth=3, cp = 0, minsplit=20, minbucket = 10))
#fancyRpartPlot(tree_fit28_3)
tree28_3_values = as.data.table(t(data.table(selected_dt3[6,-1])))
tree28_3_values[,tree28_3_predictions:=predict(tree_fit28_3,tree28_3_values)]
colnames(tree28_3_values) <- c("exact value", "predicted value")
colnames(time_index_column) <- c("time")
tree28_3_values = cbind(time_index_column, tree28_3_values)
data_plot28_3 = melt(tree28_3_values,id.vars="time",measure.vars=c("exact value", "predicted value"))
exact_vs_predicted28_3 = ggplot(data_plot28_3,aes(x=time,y=value,color=variable))+
geom_line()
#exact_vs_predicted28_3
value28_4 = as.numeric(selected_dt3[6,-1])
tree_fit28_4=rpart(value28_4~time_index,selected_dt2,
control=rpart.control(maxdepth=4, cp = 0, minsplit=20, minbucket = 10))
#fancyRpartPlot(tree_fit28_4)
tree28_4_values = as.data.table(t(data.table(selected_dt3[6,-1])))
tree28_4_values[,tree28_4_predictions:=predict(tree_fit28_4,tree28_4_values)]
colnames(tree28_4_values) <- c("exact value", "predicted value")
colnames(time_index_column) <- c("time")
tree28_4_values = cbind(time_index_column, tree28_4_values)
data_plot28_4 = melt(tree28_4_values,id.vars="time",measure.vars=c("exact value", "predicted value"))
exact_vs_predicted28_4 = ggplot(data_plot28_4,aes(x=time,y=value,color=variable))+
geom_line()
#exact_vs_predicted28_4
value28_5 = as.numeric(selected_dt3[6,-1])
tree_fit28_5=rpart(value28_5~time_index,selected_dt2,
control=rpart.control(maxdepth=5, cp = 0, minsplit=20, minbucket = 10))
#fancyRpartPlot(tree_fit28_5)
tree28_5_values = as.data.table(t(data.table(selected_dt3[6,-1])))
tree28_5_values[,tree28_5_predictions:=predict(tree_fit28_5,tree28_5_values)]
colnames(tree28_5_values) <- c("exact value", "predicted value")
colnames(time_index_column) <- c("time")
tree28_5_values = cbind(time_index_column, tree28_5_values)
data_plot28_5 = melt(tree28_5_values,id.vars="time",measure.vars=c("exact value", "predicted value"))
exact_vs_predicted28_5 = ggplot(data_plot28_5,aes(x=time,y=value,color=variable))+
geom_line()
#exact_vs_predicted28_5
value28_6 = as.numeric(selected_dt3[6,-1])
tree_fit28_6=rpart(value28_6~time_index,selected_dt2,
control=rpart.control(maxdepth=6, cp = 0, minsplit=20, minbucket = 10))
#fancyRpartPlot(tree_fit28_6)
tree28_6_values = as.data.table(t(data.table(selected_dt3[6,-1])))
tree28_6_values[,tree28_6_predictions:=predict(tree_fit28_6,tree28_6_values)]
colnames(tree28_6_values) <- c("exact value", "predicted value")
colnames(time_index_column) <- c("time")
tree28_6_values = cbind(time_index_column, tree28_6_values)
data_plot28_6 = melt(tree28_6_values,id.vars="time",measure.vars=c("exact value", "predicted value"))
exact_vs_predicted28_6 = ggplot(data_plot28_6,aes(x=time,y=value,color=variable))+
geom_line()
#exact_vs_predicted28_6
value28_7 = as.numeric(selected_dt3[6,-1])
tree_fit28_7=rpart(value28_7~time_index,selected_dt2,
control=rpart.control(maxdepth=7, cp = 0, minsplit=20, minbucket = 10))
#fancyRpartPlot(tree_fit28_7)
tree28_7_values = as.data.table(t(data.table(selected_dt3[6,-1])))
tree28_7_values[,tree28_7_predictions:=predict(tree_fit28_7,tree28_7_values)]
colnames(tree28_7_values) <- c("exact value", "predicted value")
colnames(time_index_column) <- c("time")
tree28_7_values = cbind(time_index_column, tree28_7_values)
data_plot28_7 = melt(tree28_7_values,id.vars="time",measure.vars=c("exact value", "predicted value"))
exact_vs_predicted28_7 = ggplot(data_plot28_7,aes(x=time,y=value,color=variable))+
geom_line()
#exact_vs_predicted28_7
value28_8 = as.numeric(selected_dt3[6,-1])
tree_fit28_8=rpart(value28_8~time_index,selected_dt2,
control=rpart.control(maxdepth=8, cp = 0, minsplit=20, minbucket = 10))
#fancyRpartPlot(tree_fit28_8)
tree28_8_values = as.data.table(t(data.table(selected_dt3[6,-1])))
tree28_8_values[,tree28_8_predictions:=predict(tree_fit28_8,tree28_8_values)]
colnames(tree28_8_values) <- c("exact value", "predicted value")
colnames(time_index_column) <- c("time")
tree28_8_values = cbind(time_index_column, tree28_8_values)
data_plot28_8 = melt(tree28_8_values,id.vars="time",measure.vars=c("exact value", "predicted value"))
exact_vs_predicted28_8 = ggplot(data_plot28_8,aes(x=time,y=value,color=variable))+
geom_line()
#exact_vs_predicted28_8
minimize(tree_fit28_1$cptable[length(tree_fit28_1$cptable[, "xerror"]), "xerror"],
tree_fit28_2$cptable[length(tree_fit28_2$cptable[, "xerror"]), "xerror"],
tree_fit28_3$cptable[length(tree_fit28_3$cptable[, "xerror"]), "xerror"],
tree_fit28_4$cptable[length(tree_fit28_4$cptable[, "xerror"]), "xerror"],
tree_fit28_5$cptable[length(tree_fit28_5$cptable[, "xerror"]), "xerror"],
tree_fit28_6$cptable[length(tree_fit28_6$cptable[, "xerror"]), "xerror"],
tree_fit28_7$cptable[length(tree_fit28_7$cptable[, "xerror"]), "xerror"],
tree_fit28_8$cptable[length(tree_fit28_8$cptable[, "xerror"]), "xerror"])
exact_vs_predicted28_5
#maxdepth = 5 gives the best cv error according to cp values among 1,2,3,4,5,6,7,8;
#therefore maxdepth should be equal to 5
value29_1 = as.numeric(selected_dt3[7,-1])
tree_fit29_1=rpart(value29_1~time_index,selected_dt2,
control=rpart.control(maxdepth=1, cp = 0, minsplit=20, minbucket = 10))
#fancyRpartPlot(tree_fit29_1)
tree29_1_values = as.data.table(t(data.table(selected_dt3[7,-1])))
tree29_1_values[,tree29_1_predictions:=predict(tree_fit29_1,tree29_1_values)]
colnames(tree29_1_values) <- c("exact value", "predicted value")
colnames(time_index_column) <- c("time")
tree29_1_values = cbind(time_index_column, tree29_1_values)
data_plot29_1 = melt(tree29_1_values,id.vars="time",measure.vars=c("exact value", "predicted value"))
exact_vs_predicted29_1 = ggplot(data_plot29_1,aes(x=time,y=value,color=variable))+
geom_line()
#exact_vs_predicted29_1
value29_2 = as.numeric(selected_dt3[7,-1])
tree_fit29_2=rpart(value29_2~time_index,selected_dt2,
control=rpart.control(maxdepth=2, cp = 0, minsplit=20, minbucket = 10))
#fancyRpartPlot(tree_fit29_2)
tree29_2_values = as.data.table(t(data.table(selected_dt3[7,-1])))
tree29_2_values[,tree29_2_predictions:=predict(tree_fit29_2,tree29_2_values)]
colnames(tree29_2_values) <- c("exact value", "predicted value")
colnames(time_index_column) <- c("time")
tree29_2_values = cbind(time_index_column, tree29_2_values)
data_plot29_2 = melt(tree29_2_values,id.vars="time",measure.vars=c("exact value", "predicted value"))
exact_vs_predicted29_2 = ggplot(data_plot29_2,aes(x=time,y=value,color=variable))+
geom_line()
#exact_vs_predicted29_2
value29_3 = as.numeric(selected_dt3[7,-1])
tree_fit29_3=rpart(value29_3~time_index,selected_dt2,
control=rpart.control(maxdepth=3, cp = 0, minsplit=20, minbucket = 10))
#fancyRpartPlot(tree_fit29_3)
tree29_3_values = as.data.table(t(data.table(selected_dt3[7,-1])))
tree29_3_values[,tree29_3_predictions:=predict(tree_fit29_3,tree29_3_values)]
colnames(tree29_3_values) <- c("exact value", "predicted value")
colnames(time_index_column) <- c("time")
tree29_3_values = cbind(time_index_column, tree29_3_values)
data_plot29_3 = melt(tree29_3_values,id.vars="time",measure.vars=c("exact value", "predicted value"))
exact_vs_predicted29_3 = ggplot(data_plot29_3,aes(x=time,y=value,color=variable))+
geom_line()
#exact_vs_predicted29_3
value29_4 = as.numeric(selected_dt3[7,-1])
tree_fit29_4=rpart(value29_4~time_index,selected_dt2,
control=rpart.control(maxdepth=4, cp = 0, minsplit=20, minbucket = 10))
#fancyRpartPlot(tree_fit29_4)
tree29_4_values = as.data.table(t(data.table(selected_dt3[7,-1])))
tree29_4_values[,tree29_4_predictions:=predict(tree_fit29_4,tree29_4_values)]
colnames(tree29_4_values) <- c("exact value", "predicted value")
colnames(time_index_column) <- c("time")
tree29_4_values = cbind(time_index_column, tree29_4_values)
data_plot29_4 = melt(tree29_4_values,id.vars="time",measure.vars=c("exact value", "predicted value"))
exact_vs_predicted29_4 = ggplot(data_plot29_4,aes(x=time,y=value,color=variable))+
geom_line()
#exact_vs_predicted29_4
value29_5 = as.numeric(selected_dt3[7,-1])
tree_fit29_5=rpart(value29_5~time_index,selected_dt2,
control=rpart.control(maxdepth=5, cp = 0, minsplit=20, minbucket = 10))
#fancyRpartPlot(tree_fit29_5)
tree29_5_values = as.data.table(t(data.table(selected_dt3[7,-1])))
tree29_5_values[,tree29_5_predictions:=predict(tree_fit29_5,tree29_5_values)]
colnames(tree29_5_values) <- c("exact value", "predicted value")
colnames(time_index_column) <- c("time")
tree29_5_values = cbind(time_index_column, tree29_5_values)
data_plot29_5 = melt(tree29_5_values,id.vars="time",measure.vars=c("exact value", "predicted value"))
exact_vs_predicted29_5 = ggplot(data_plot29_5,aes(x=time,y=value,color=variable))+
geom_line()
#exact_vs_predicted29_5
value29_6 = as.numeric(selected_dt3[7,-1])
tree_fit29_6=rpart(value29_6~time_index,selected_dt2,
control=rpart.control(maxdepth=6, cp = 0, minsplit=20, minbucket = 10))
#fancyRpartPlot(tree_fit29_6)
tree29_6_values = as.data.table(t(data.table(selected_dt3[7,-1])))
tree29_6_values[,tree29_6_predictions:=predict(tree_fit29_6,tree29_6_values)]
colnames(tree29_6_values) <- c("exact value", "predicted value")
colnames(time_index_column) <- c("time")
tree29_6_values = cbind(time_index_column, tree29_6_values)
data_plot29_6 = melt(tree29_6_values,id.vars="time",measure.vars=c("exact value", "predicted value"))
exact_vs_predicted29_6 = ggplot(data_plot29_6,aes(x=time,y=value,color=variable))+
geom_line()
#exact_vs_predicted29_6
value29_7 = as.numeric(selected_dt3[7,-1])
tree_fit29_7=rpart(value29_7~time_index,selected_dt2,
control=rpart.control(maxdepth=7, cp = 0, minsplit=20, minbucket = 10))
#fancyRpartPlot(tree_fit29_7)
tree29_7_values = as.data.table(t(data.table(selected_dt3[7,-1])))
tree29_7_values[,tree29_7_predictions:=predict(tree_fit29_7,tree29_7_values)]
colnames(tree29_7_values) <- c("exact value", "predicted value")
colnames(time_index_column) <- c("time")
tree29_7_values = cbind(time_index_column, tree29_7_values)
data_plot29_7 = melt(tree29_7_values,id.vars="time",measure.vars=c("exact value", "predicted value"))
exact_vs_predicted29_7 = ggplot(data_plot29_7,aes(x=time,y=value,color=variable))+
geom_line()
#exact_vs_predicted29_7
value29_8 = as.numeric(selected_dt3[7,-1])
tree_fit29_8=rpart(value29_8~time_index,selected_dt2,
control=rpart.control(maxdepth=8, cp = 0, minsplit=20, minbucket = 10))
#fancyRpartPlot(tree_fit29_8)
tree29_8_values = as.data.table(t(data.table(selected_dt3[7,-1])))
tree29_8_values[,tree29_8_predictions:=predict(tree_fit29_8,tree29_8_values)]
colnames(tree29_8_values) <- c("exact value", "predicted value")
colnames(time_index_column) <- c("time")
tree29_8_values = cbind(time_index_column, tree29_8_values)
data_plot29_8 = melt(tree29_8_values,id.vars="time",measure.vars=c("exact value", "predicted value"))
exact_vs_predicted29_8 = ggplot(data_plot29_8,aes(x=time,y=value,color=variable))+
geom_line()
#exact_vs_predicted29_8
minimize(tree_fit29_1$cptable[length(tree_fit29_1$cptable[, "xerror"]), "xerror"],
tree_fit29_2$cptable[length(tree_fit29_2$cptable[, "xerror"]), "xerror"],
tree_fit29_3$cptable[length(tree_fit29_3$cptable[, "xerror"]), "xerror"],
tree_fit29_4$cptable[length(tree_fit29_4$cptable[, "xerror"]), "xerror"],
tree_fit29_5$cptable[length(tree_fit29_5$cptable[, "xerror"]), "xerror"],
tree_fit29_6$cptable[length(tree_fit29_6$cptable[, "xerror"]), "xerror"],
tree_fit29_7$cptable[length(tree_fit29_7$cptable[, "xerror"]), "xerror"],
tree_fit29_8$cptable[length(tree_fit29_8$cptable[, "xerror"]), "xerror"])
exact_vs_predicted29_6
#maxdepth = 6 gives the best cv error according to cp values among 1,2,3,4,5,6,7,8;
#therefore maxdepth should be equal to 6
value30_1 = as.numeric(selected_dt3[8,-1])
tree_fit30_1=rpart(value30_1~time_index,selected_dt2,
control=rpart.control(maxdepth=1, cp = 0, minsplit=20, minbucket = 10))
#fancyRpartPlot(tree_fit30_1)
tree30_1_values = as.data.table(t(data.table(selected_dt3[8,-1])))
tree30_1_values[,tree30_1_predictions:=predict(tree_fit30_1,tree30_1_values)]
colnames(tree30_1_values) <- c("exact value", "predicted value")
colnames(time_index_column) <- c("time")
tree30_1_values = cbind(time_index_column, tree30_1_values)
data_plot30_1 = melt(tree30_1_values,id.vars="time",measure.vars=c("exact value", "predicted value"))
exact_vs_predicted30_1 = ggplot(data_plot30_1,aes(x=time,y=value,color=variable))+
geom_line()
#exact_vs_predicted30_1
value30_2 = as.numeric(selected_dt3[8,-1])
tree_fit30_2=rpart(value30_2~time_index,selected_dt2,
control=rpart.control(maxdepth=2, cp = 0, minsplit=20, minbucket = 10))
#fancyRpartPlot(tree_fit30_2)
tree30_2_values = as.data.table(t(data.table(selected_dt3[8,-1])))
tree30_2_values[,tree30_2_predictions:=predict(tree_fit30_2,tree30_2_values)]
colnames(tree30_2_values) <- c("exact value", "predicted value")
colnames(time_index_column) <- c("time")
tree30_2_values = cbind(time_index_column, tree30_2_values)
data_plot30_2 = melt(tree30_2_values,id.vars="time",measure.vars=c("exact value", "predicted value"))
exact_vs_predicted30_2 = ggplot(data_plot30_2,aes(x=time,y=value,color=variable))+
geom_line()
#exact_vs_predicted30_2
value30_3 = as.numeric(selected_dt3[8,-1])
tree_fit30_3=rpart(value30_3~time_index,selected_dt2,
control=rpart.control(maxdepth=3, cp = 0, minsplit=20, minbucket = 10))
#fancyRpartPlot(tree_fit30_3)
tree30_3_values = as.data.table(t(data.table(selected_dt3[8,-1])))
tree30_3_values[,tree30_3_predictions:=predict(tree_fit30_3,tree30_3_values)]
colnames(tree30_3_values) <- c("exact value", "predicted value")
colnames(time_index_column) <- c("time")
tree30_3_values = cbind(time_index_column, tree30_3_values)
data_plot30_3 = melt(tree30_3_values,id.vars="time",measure.vars=c("exact value", "predicted value"))
exact_vs_predicted30_3 = ggplot(data_plot30_3,aes(x=time,y=value,color=variable))+
geom_line()
#exact_vs_predicted30_3
value30_4 = as.numeric(selected_dt3[8,-1])
tree_fit30_4=rpart(value30_4~time_index,selected_dt2,
control=rpart.control(maxdepth=4, cp = 0, minsplit=20, minbucket = 10))
#fancyRpartPlot(tree_fit30_4)
tree30_4_values = as.data.table(t(data.table(selected_dt3[8,-1])))
tree30_4_values[,tree30_4_predictions:=predict(tree_fit30_4,tree30_4_values)]
colnames(tree30_4_values) <- c("exact value", "predicted value")
colnames(time_index_column) <- c("time")
tree30_4_values = cbind(time_index_column, tree30_4_values)
data_plot30_4 = melt(tree30_4_values,id.vars="time",measure.vars=c("exact value", "predicted value"))
exact_vs_predicted30_4 = ggplot(data_plot30_4,aes(x=time,y=value,color=variable))+
geom_line()
#exact_vs_predicted30_4
value30_5 = as.numeric(selected_dt3[8,-1])
tree_fit30_5=rpart(value30_5~time_index,selected_dt2,
control=rpart.control(maxdepth=5, cp = 0, minsplit=20, minbucket = 10))
#fancyRpartPlot(tree_fit30_5)
tree30_5_values = as.data.table(t(data.table(selected_dt3[8,-1])))
tree30_5_values[,tree30_5_predictions:=predict(tree_fit30_5,tree30_5_values)]
colnames(tree30_5_values) <- c("exact value", "predicted value")
colnames(time_index_column) <- c("time")
tree30_5_values = cbind(time_index_column, tree30_5_values)
data_plot30_5 = melt(tree30_5_values,id.vars="time",measure.vars=c("exact value", "predicted value"))
exact_vs_predicted30_5 = ggplot(data_plot30_5,aes(x=time,y=value,color=variable))+
geom_line()
#exact_vs_predicted30_5
value30_6 = as.numeric(selected_dt3[8,-1])
tree_fit30_6=rpart(value30_6~time_index,selected_dt2,
control=rpart.control(maxdepth=6, cp = 0, minsplit=20, minbucket = 10))
#fancyRpartPlot(tree_fit30_6)
tree30_6_values = as.data.table(t(data.table(selected_dt3[8,-1])))
tree30_6_values[,tree30_6_predictions:=predict(tree_fit30_6,tree30_6_values)]
colnames(tree30_6_values) <- c("exact value", "predicted value")
colnames(time_index_column) <- c("time")
tree30_6_values = cbind(time_index_column, tree30_6_values)
data_plot30_6 = melt(tree30_6_values,id.vars="time",measure.vars=c("exact value", "predicted value"))
exact_vs_predicted30_6 = ggplot(data_plot30_6,aes(x=time,y=value,color=variable))+
geom_line()
#exact_vs_predicted30_6
value30_7 = as.numeric(selected_dt3[8,-1])
tree_fit30_7=rpart(value30_7~time_index,selected_dt2,
control=rpart.control(maxdepth=7, cp = 0, minsplit=20, minbucket = 10))
#fancyRpartPlot(tree_fit30_7)
tree30_7_values = as.data.table(t(data.table(selected_dt3[8,-1])))
tree30_7_values[,tree30_7_predictions:=predict(tree_fit30_7,tree30_7_values)]
colnames(tree30_7_values) <- c("exact value", "predicted value")
colnames(time_index_column) <- c("time")
tree30_7_values = cbind(time_index_column, tree30_7_values)
data_plot30_7 = melt(tree30_7_values,id.vars="time",measure.vars=c("exact value", "predicted value"))
exact_vs_predicted30_7 = ggplot(data_plot30_7,aes(x=time,y=value,color=variable))+
geom_line()
#exact_vs_predicted30_7
value30_8 = as.numeric(selected_dt3[8,-1])
tree_fit30_8=rpart(value30_8~time_index,selected_dt2,
control=rpart.control(maxdepth=8, cp = 0, minsplit=20, minbucket = 10))
#fancyRpartPlot(tree_fit30_8)
tree30_8_values = as.data.table(t(data.table(selected_dt3[8,-1])))
tree30_8_values[,tree30_8_predictions:=predict(tree_fit30_8,tree30_8_values)]
colnames(tree30_8_values) <- c("exact value", "predicted value")
colnames(time_index_column) <- c("time")
tree30_8_values = cbind(time_index_column, tree30_8_values)
data_plot30_8 = melt(tree30_8_values,id.vars="time",measure.vars=c("exact value", "predicted value"))
exact_vs_predicted30_8 = ggplot(data_plot30_8,aes(x=time,y=value,color=variable))+
geom_line()
#exact_vs_predicted30_8
minimize(tree_fit30_1$cptable[length(tree_fit30_1$cptable[, "xerror"]), "xerror"],
tree_fit30_2$cptable[length(tree_fit30_2$cptable[, "xerror"]), "xerror"],
tree_fit30_3$cptable[length(tree_fit30_3$cptable[, "xerror"]), "xerror"],
tree_fit30_4$cptable[length(tree_fit30_4$cptable[, "xerror"]), "xerror"],
tree_fit30_5$cptable[length(tree_fit30_5$cptable[, "xerror"]), "xerror"],
tree_fit30_6$cptable[length(tree_fit30_6$cptable[, "xerror"]), "xerror"],
tree_fit30_7$cptable[length(tree_fit30_7$cptable[, "xerror"]), "xerror"],
tree_fit30_8$cptable[length(tree_fit30_8$cptable[, "xerror"]), "xerror"])
exact_vs_predicted30_8
#maxdepth = 8 gives the best cv error according to cp values among 1,2,3,4,5,6,7,8;
#therefore maxdepth should be equal to 8
trees = c(1:30)
tree_depths = c(4,5,2,2,2,2,8,2,1,5,6,5,4,3,3,6,8,5,8,3,5,7,7,7,7,5,6,5,6,8)
best_tree = cbind(trees, tree_depths)
colnames(best_tree) = c("Regression Tree for Time Series", "Best maxdepth Value")
best_tree
#QUESTION - 3
all_cv_values = c(cv1$lambda.1se,cv2$lambda.1se,cv3$lambda.1se,cv4$lambda.1se,
cv5$lambda.1se,cv6$lambda.1se,cv7$lambda.1se,cv8$lambda.1se,
cv9$lambda.1se,cv10$lambda.1se,cv11$lambda.1se,cv12$lambda.1se,
cv13$lambda.1se,cv14$lambda.1se,cv15$lambda.1se,cv16$lambda.1se,
cv17$lambda.1se,cv18$lambda.1se,cv19$lambda.1se,cv20$lambda.1se,
cv21$lambda.1se,cv22$lambda.1se,cv23$lambda.1se,cv24$lambda.1se,
cv25$lambda.1se,cv26$lambda.1se,cv27$lambda.1se,cv28$lambda.1se,
cv29$lambda.1se,cv30$lambda.1se)
mse_fused_data1 = cbind(as.numeric(unlist(tree1_4_values[,2])),
fused_lasso_1_predicted, as.numeric(unlist(tree1_4_values[,3])))
mse_fused_value1 = mse(mse_fused_data1[,1], mse_fused_data1[,2])
mse_tree_value1 = mse(mse_fused_data1[,1], mse_fused_data1[,3])
mse_fused_data2 = cbind(as.numeric(unlist(tree2_5_values[,2])),
fused_lasso_2_predicted, as.numeric(unlist(tree2_5_values[,3])))
mse_fused_value2 = mse(mse_fused_data2[,1], mse_fused_data2[,2])
mse_tree_value2 = mse(mse_fused_data2[,1], mse_fused_data2[,3])
mse_fused_data3 = cbind(as.numeric(unlist(tree3_2_values[,2])),
fused_lasso_3_predicted, as.numeric(unlist(tree3_2_values[,3])))
mse_fused_value3 = mse(mse_fused_data3[,1], mse_fused_data3[,2])
mse_tree_value3 = mse(mse_fused_data3[,1], mse_fused_data3[,3])
mse_fused_data4 = cbind(as.numeric(unlist(tree4_2_values[,2])),
fused_lasso_4_predicted, as.numeric(unlist(tree4_2_values[,3])))
mse_fused_value4 = mse(mse_fused_data4[,1], mse_fused_data4[,2])
mse_tree_value4 = mse(mse_fused_data4[,1], mse_fused_data4[,3])
mse_fused_data5 = cbind(as.numeric(unlist(tree5_2_values[,2])),
fused_lasso_5_predicted, as.numeric(unlist(tree5_2_values[,3])))
mse_fused_value5 = mse(mse_fused_data5[,1], mse_fused_data5[,2])
mse_tree_value5 = mse(mse_fused_data5[,1], mse_fused_data5[,3])
mse_fused_data6 = cbind(as.numeric(unlist(tree6_2_values[,2])),
fused_lasso_6_predicted, as.numeric(unlist(tree6_2_values[,3])))
mse_fused_value6 = mse(mse_fused_data6[,1], mse_fused_data6[,2])
mse_tree_value6 = mse(mse_fused_data6[,1], mse_fused_data6[,3])
mse_fused_data7 = cbind(as.numeric(unlist(tree7_8_values[,2])),
fused_lasso_7_predicted, as.numeric(unlist(tree7_8_values[,3])))
mse_fused_value7 = mse(mse_fused_data7[,1], mse_fused_data7[,2])
mse_tree_value7 = mse(mse_fused_data7[,1], mse_fused_data7[,3])
mse_fused_data8 = cbind(as.numeric(unlist(tree8_2_values[,2])),
fused_lasso_8_predicted, as.numeric(unlist(tree8_2_values[,3])))
mse_fused_value8 = mse(mse_fused_data8[,1], mse_fused_data8[,2])
mse_tree_value8 = mse(mse_fused_data8[,1], mse_fused_data8[,3])
mse_fused_data9 = cbind(as.numeric(unlist(tree9_1_values[,2])),
fused_lasso_9_predicted, as.numeric(unlist(tree9_1_values[,3])))
mse_fused_value9 = mse(mse_fused_data9[,1], mse_fused_data9[,2])
mse_tree_value9 = mse(mse_fused_data9[,1], mse_fused_data9[,3])
mse_fused_data10 = cbind(as.numeric(unlist(tree10_5_values[,2])),
fused_lasso_10_predicted, as.numeric(unlist(tree10_5_values[,3])))
mse_fused_value10 = mse(mse_fused_data10[,1], mse_fused_data10[,2])
mse_tree_value10 = mse(mse_fused_data10[,1], mse_fused_data10[,3])
mse_fused_data11 = cbind(as.numeric(unlist(tree11_6_values[,2])),
fused_lasso_11_predicted, as.numeric(unlist(tree11_6_values[,3])))
mse_fused_value11 = mse(mse_fused_data11[,1], mse_fused_data11[,2])
mse_tree_value11 = mse(mse_fused_data11[,1], mse_fused_data11[,3])
mse_fused_data12 = cbind(as.numeric(unlist(tree12_5_values[,2])),
fused_lasso_12_predicted, as.numeric(unlist(tree12_5_values[,3])))
mse_fused_value12 = mse(mse_fused_data12[,1], mse_fused_data12[,2])
mse_tree_value12 = mse(mse_fused_data12[,1], mse_fused_data12[,3])
mse_fused_data13 = cbind(as.numeric(unlist(tree13_4_values[,2])),
fused_lasso_13_predicted, as.numeric(unlist(tree13_4_values[,3])))
mse_fused_value13 = mse(mse_fused_data13[,1], mse_fused_data13[,2])
mse_tree_value13 = mse(mse_fused_data13[,1], mse_fused_data13[,3])
mse_fused_data14 = cbind(as.numeric(unlist(tree14_3_values[,2])),
fused_lasso_14_predicted, as.numeric(unlist(tree14_3_values[,3])))
mse_fused_value14 = mse(mse_fused_data14[,1], mse_fused_data14[,2])
mse_tree_value14 = mse(mse_fused_data14[,1], mse_fused_data14[,3])
mse_fused_data15 = cbind(as.numeric(unlist(tree15_3_values[,2])),
fused_lasso_15_predicted, as.numeric(unlist(tree15_3_values[,3])))
mse_fused_value15 = mse(mse_fused_data15[,1], mse_fused_data15[,2])
mse_tree_value15 = mse(mse_fused_data15[,1], mse_fused_data15[,3])
mse_fused_data16 = cbind(as.numeric(unlist(tree16_6_values[,2])),
fused_lasso_16_predicted, as.numeric(unlist(tree16_6_values[,3])))
mse_fused_value16 = mse(mse_fused_data16[,1], mse_fused_data16[,2])
mse_tree_value16 = mse(mse_fused_data16[,1], mse_fused_data16[,3])
mse_fused_data17 = cbind(as.numeric(unlist(tree17_8_values[,2])),
fused_lasso_17_predicted, as.numeric(unlist(tree17_8_values[,3])))
mse_fused_value17 = mse(mse_fused_data17[,1], mse_fused_data17[,2])
mse_tree_value17 = mse(mse_fused_data17[,1], mse_fused_data17[,3])
mse_fused_data18 = cbind(as.numeric(unlist(tree18_5_values[,2])),
fused_lasso_18_predicted, as.numeric(unlist(tree18_5_values[,3])))
mse_fused_value18 = mse(mse_fused_data18[,1], mse_fused_data18[,2])
mse_tree_value18 = mse(mse_fused_data18[,1], mse_fused_data18[,3])
mse_fused_data19 = cbind(as.numeric(unlist(tree19_8_values[,2])),
fused_lasso_19_predicted, as.numeric(unlist(tree19_8_values[,3])))
mse_fused_value19 = mse(mse_fused_data19[,1], mse_fused_data19[,2])
mse_tree_value19 = mse(mse_fused_data19[,1], mse_fused_data19[,3])
mse_fused_data20 = cbind(as.numeric(unlist(tree20_3_values[,2])),
fused_lasso_20_predicted, as.numeric(unlist(tree20_3_values[,3])))
mse_fused_value20 = mse(mse_fused_data20[,1], mse_fused_data20[,2])
mse_tree_value20 = mse(mse_fused_data20[,1], mse_fused_data20[,3])
mse_fused_data21 = cbind(as.numeric(unlist(tree21_5_values[,2])),
fused_lasso_21_predicted, as.numeric(unlist(tree21_5_values[,3])))
mse_fused_value21 = mse(mse_fused_data21[,1], mse_fused_data21[,2])
mse_tree_value21 = mse(mse_fused_data21[,1], mse_fused_data21[,3])
mse_fused_data22 = cbind(as.numeric(unlist(tree22_7_values[,2])),
fused_lasso_22_predicted, as.numeric(unlist(tree22_7_values[,3])))
mse_fused_value22 = mse(mse_fused_data22[,1], mse_fused_data22[,2])
mse_tree_value22 = mse(mse_fused_data22[,1], mse_fused_data22[,3])
mse_fused_data23 = cbind(as.numeric(unlist(tree23_7_values[,2])),
fused_lasso_23_predicted, as.numeric(unlist(tree23_7_values[,3])))
mse_fused_value23 = mse(mse_fused_data23[,1], mse_fused_data23[,2])
mse_tree_value23 = mse(mse_fused_data23[,1], mse_fused_data23[,3])
mse_fused_data24 = cbind(as.numeric(unlist(tree24_7_values[,2])),
fused_lasso_24_predicted, as.numeric(unlist(tree24_7_values[,3])))
mse_fused_value24 = mse(mse_fused_data24[,1], mse_fused_data24[,2])
mse_tree_value24 = mse(mse_fused_data24[,1], mse_fused_data24[,3])
mse_fused_data25 = cbind(as.numeric(unlist(tree25_7_values[,2])),
fused_lasso_25_predicted, as.numeric(unlist(tree25_7_values[,3])))
mse_fused_value25 = mse(mse_fused_data25[,1], mse_fused_data25[,2])
mse_tree_value25 = mse(mse_fused_data25[,1], mse_fused_data25[,3])
mse_fused_data26 = cbind(as.numeric(unlist(tree26_5_values[,2])),
fused_lasso_26_predicted, as.numeric(unlist(tree26_5_values[,3])))
mse_fused_value26 = mse(mse_fused_data26[,1], mse_fused_data26[,2])
mse_tree_value26 = mse(mse_fused_data26[,1], mse_fused_data26[,3])
mse_fused_data27 = cbind(as.numeric(unlist(tree27_6_values[,2])),
fused_lasso_27_predicted, as.numeric(unlist(tree27_6_values[,3])))
mse_fused_value27 = mse(mse_fused_data27[,1], mse_fused_data27[,2])
mse_tree_value27 = mse(mse_fused_data27[,1], mse_fused_data27[,3])
mse_fused_data28 = cbind(as.numeric(unlist(tree28_5_values[,2])),
fused_lasso_28_predicted, as.numeric(unlist(tree28_5_values[,3])))
mse_fused_value28 = mse(mse_fused_data28[,1], mse_fused_data28[,2])
mse_tree_value28 = mse(mse_fused_data28[,1], mse_fused_data28[,3])
mse_fused_data29 = cbind(as.numeric(unlist(tree29_6_values[,2])),
fused_lasso_29_predicted, as.numeric(unlist(tree29_6_values[,3])))
mse_fused_value29 = mse(mse_fused_data29[,1], mse_fused_data29[,2])
mse_tree_value29 = mse(mse_fused_data29[,1], mse_fused_data29[,3])
mse_fused_data30 = cbind(as.numeric(unlist(tree30_8_values[,2])),
fused_lasso_30_predicted, as.numeric(unlist(tree30_8_values[,3])))
mse_fused_value30 = mse(mse_fused_data30[,1], mse_fused_data30[,2])
mse_tree_value30 = mse(mse_fused_data30[,1], mse_fused_data30[,3])
all_mse_fused = c(mse_fused_value1, mse_fused_value2, mse_fused_value3,
mse_fused_value4, mse_fused_value5, mse_fused_value6,
mse_fused_value7, mse_fused_value8, mse_fused_value9,
mse_fused_value10, mse_fused_value11, mse_fused_value12,
mse_fused_value13, mse_fused_value14, mse_fused_value15,
mse_fused_value16, mse_fused_value17, mse_fused_value18,
mse_fused_value19, mse_fused_value20, mse_fused_value21,
mse_fused_value22, mse_fused_value23, mse_fused_value24,
mse_fused_value25, mse_fused_value26, mse_fused_value27,
mse_fused_value28, mse_fused_value29, mse_fused_value30)
all_mse_tree = c(mse_tree_value1, mse_tree_value2, mse_tree_value3,
mse_tree_value4, mse_tree_value5, mse_tree_value6,
mse_tree_value7, mse_tree_value8, mse_tree_value9,
mse_tree_value10, mse_tree_value11, mse_tree_value12,
mse_tree_value13, mse_tree_value14, mse_tree_value15,
mse_tree_value16, mse_tree_value17, mse_tree_value18,
mse_tree_value19, mse_tree_value20, mse_tree_value21,
mse_tree_value22, mse_tree_value23, mse_tree_value24,
mse_tree_value25, mse_tree_value26, mse_tree_value27,
mse_tree_value28, mse_tree_value29, mse_tree_value30)
par(mfrow=c(1,2))
boxplot(all_mse_fused, main = "1D Fused Lasso MSE Values - Boxplot", staplewex = 1)
boxplot(all_mse_tree, main = "1D Fused Lasso MSE Values - Boxplot", staplewex = 1)
rawdataexact = c(rep(1,10), rep(2,12), rep(3,8))
rawdatapredicted = c(3,1,3,1,1,1,1,1,1,1,
2,2,2,1,2,2,2,2,2,2,2,2,
3,3,3,3,3,1,1,3)
rawdata_exact_vs_predicted = cbind(rawdataexact,rawdatapredicted)
fusedataexact = c(rep(1,10), rep(2,12), rep(3,8))
fusedatapredicted = c(3,1,3,1,1,1,1,1,1,3,
2,2,2,2,2,2,2,2,2,2,2,2,
3,3,1,3,3,3,3,3)
fusedata_exact_vs_predicted = cbind(fusedataexact,fusedataexact)
rawdataexact = c(rep(1,10), rep(2,12), rep(3,8))
rawdatapredicted = c(3,1,3,1,1,1,1,1,1,1,
2,2,2,1,2,2,2,2,2,2,2,2,
3,3,3,3,3,1,1,3)
rawdata_exact_vs_predicted = cbind(rawdataexact,rawdatapredicted)
colnames(rawdata_exact_vs_predicted) = c("Exact Class Value", "Predicted Class Value - 1-NN")
rawdata_exact_vs_predicted
fusedataexact = c(rep(1,10), rep(2,12), rep(3,8))
fusedatapredicted = c(3,1,3,1,1,1,1,1,1,3,
2,2,2,2,2,2,2,2,2,2,2,2,
3,3,1,3,3,3,3,3)
fusedata_exact_vs_predicted = cbind(fusedataexact,fusedatapredicted)
colnames(fusedata_exact_vs_predicted) = c("Exact Class Value", "Predicted Class Value - 1D Fused Lasso")
fusedata_exact_vs_predicted
treedataexact = c(rep(1,10), rep(2,12), rep(3,8))
treedatapredicted = c(3,1,3,1,1,1,1,1,1,1,
2,2,2,2,2,2,2,2,2,2,2,2,
3,3,3,3,3,3,1,3)
treedata_exact_vs_predicted = cbind(treedataexact,treedatapredicted)
colnames(treedata_exact_vs_predicted) = c("Exact Class Value", "Predicted Class Value - 1D Fused Lasso")
treedata_exact_vs_predicted
